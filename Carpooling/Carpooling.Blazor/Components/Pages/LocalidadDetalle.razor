@page "/localidad/nueva"
@page "/localidad/editar/{CodPostal}"
@rendermode InteractiveServer

@using DTOs
@using API.Clients
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject ServicioSesionUsuario SesionUsuario

<h3>@Titulo</h3>

@if (puedeAcceder && localidadModel != null)
{
    <EditForm Model="@localidadModel" OnValidSubmit="GuardarLocalidad" FormName="LocalidadForm">
        <DataAnnotationsValidator />

        <div class="mb-3">
            <label class="form-label">Código Postal:</label>
            <InputText class="form-control" @bind-Value="localidadModel.CodPostal" disabled="@modoEdicion" />
            <ValidationMessage For="@(() => localidadModel.CodPostal)" />
        </div>

        <div class="mb-3">
            <label class="form-label">Nombre:</label>
            <InputText class="form-control" @bind-Value="localidadModel.Nombre" />
            <ValidationMessage For="@(() => localidadModel.Nombre)" />
        </div>

        @if (!string.IsNullOrEmpty(error))
        {
            <div class="alert alert-danger">@error</div>
        }

        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>

    </EditForm>
}
else if (!puedeAcceder)
{
    <div class="alert alert-danger">Acceso denegado. Debes ser Administrador.</div>
}
else
{
    <p>Cargando datos de la localidad...</p>
}


@code {
    [Parameter]
    public string CodPostal { get; set; } // Recibe el CP desde la URL si editamos

    private LocalidadModel localidadModel;
    private string error;
    private string Titulo = "";
    private bool modoEdicion = false;
    private bool puedeAcceder = false;

    protected override async Task OnInitializedAsync()
    {
        if (SesionUsuario.EstaLogueado && SesionUsuario.UsuarioActual.TipoUsuario == Domain.Model.TipoUsuario.Administrador)
        {
            puedeAcceder = true;
            if (!string.IsNullOrEmpty(CodPostal)) // Modo Edición
            {
                modoEdicion = true;
                Titulo = "Editar Localidad";
                try
                {
                    var dto = await LocalidadApiClient.GetAsync(CodPostal);
                    localidadModel = new LocalidadModel { CodPostal = dto.CodPostal, Nombre = dto.Nombre };
                }
                catch (Exception ex)
                {
                    error = $"No se pudo cargar la localidad: {ex.Message}";
                }
            }
            else // Modo Creación
            {
                modoEdicion = false;
                Titulo = "Agregar Nueva Localidad";
                localidadModel = new LocalidadModel();
            }
        }
        else
        {
            puedeAcceder = false;
        }
    }

    private async Task GuardarLocalidad()
    {
        error = string.Empty;
        var dto = new LocalidadDTO { CodPostal = localidadModel.CodPostal, Nombre = localidadModel.Nombre };

        try
        {
            if (modoEdicion)
            {
                await LocalidadApiClient.UpdateAsync(dto);
            }
            else
            {
                await LocalidadApiClient.AddAsync(dto);
            }
            Navigation.NavigateTo("/localidades"); // Volvemos a la lista
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al guardar localidad: {ex.Message}");
            // El mensaje de la API (ej. "ya existe") se puede mostrar aquí
            error = $"No se pudo guardar la localidad: {ex.Message}";
        }
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/localidades");
    }

    // Modelo interno con validaciones para el formulario
    public class LocalidadModel
    {
        [Required(ErrorMessage = "El Código Postal es obligatorio.")]
        [RegularExpression(@"^\d{4}$", ErrorMessage = "El Código Postal debe tener 4 dígitos.")] // Ejemplo validación simple CP Argentina
        public string CodPostal { get; set; }

        [Required(ErrorMessage = "El Nombre es obligatorio.")]
        public string Nombre { get; set; }
    }
}